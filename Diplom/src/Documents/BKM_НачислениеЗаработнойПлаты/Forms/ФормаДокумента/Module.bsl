#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если  Не ДатыЗаполненыВерно() Тогда
		 Отказ = Истина;
	 КонецЕсли;
	 
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеНачисления

&НаКлиенте
Асинх Процедура ОсновныеНачисленияВидРасчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОсновныеНачисления.ТекущиеДанные;
	Если ТекущиеДанные.ВидРасчета = ПредопределенноеЗначение("ПланВидовРасчета.BKM_ОсновныеНачисления.Отпуск") 
		И ТекущиеДанные.ГрафикРабот <> ПолучитьГрафикРаботОтпуска() Тогда
		
			Результат = Ждать ВопросАсинх("Установить график работ - ОтпускКалендарныеДни?", 
			РежимДиалогаВопрос.ДаНет,,,"Вопрос.");	
			
			Если Результат = КодВозвратаДиалога.Да Тогда				
				ТекущиеДанные.ГрафикРабот = ПолучитьГрафикРаботОтпуска();			
			КонецЕсли; 
			
	КонецЕсли;
	
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура Заполнить(Команда) 
	
	Если Объект.ОсновныеНачисления.Количество() <> 0 ИЛИ Объект.ДополнительныеНачисления.Количество() <> 0 Тогда
			
		Результат = Ждать ВопросАсинх("Табличные части начислений будут очищены. Продолжить?", 
		РежимДиалогаВопрос.ДаНет,,,"Вопрос.");	
		
		Если Результат = Неопределено Или Результат = КодВозвратаДиалога.Нет Тогда				
			Возврат;			
		КонецЕсли; 
		
	КонецЕсли;
			
	ЗаполнитьНаСервере(); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
		
	Объект.ОсновныеНачисления.Очистить();
	Объект.ДополнительныеНачисления.Очистить();
	Запрос = Новый Запрос;
	Запрос. Текст = 
	"ВЫБРАТЬ
	|	BKM_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	РегистрСведений.BKM_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, ) КАК BKM_УсловияОплатыСотрудниковСрезПоследних
	|ГДЕ
	|	НЕ BKM_УсловияОплатыСотрудниковСрезПоследних.Сотрудник.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	BKM_ВыполненныеСотрудникомРаботы.Сотрудник КАК Сотрудник,
	|	СУММА(BKM_ВыполненныеСотрудникомРаботы.ЧасовКОплате) КАК ЧасовКОплате,
	|	СУММА(BKM_ВыполненныеСотрудникомРаботы.СуммаКОплате) КАК СуммаКОплате
	|ПОМЕСТИТЬ ВТ_Корректировка
	|ИЗ
	|	РегистрНакопления.BKM_ВыполненныеСотрудникомРаботы КАК BKM_ВыполненныеСотрудникомРаботы
	|ГДЕ
	|	BKM_ВыполненныеСотрудникомРаботы.Регистратор = &Ссылка
	|	И BKM_ВыполненныеСотрудникомРаботы.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_Сотрудники КАК ВТ_Сотрудники)
	|
	|СГРУППИРОВАТЬ ПО
	|	BKM_ВыполненныеСотрудникомРаботы.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(BKM_УсловияОплатыСотрудниковСрезПоследних.ГрафикРабот, ЗНАЧЕНИЕ(Справочник.BKM_ГрафикиРабот.ПустаяСсылка)) КАК ГрафикРабот,
	|	ЕСТЬNULL(BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты.ЧасовКОплатеОборот, 0) + ЕСТЬNULL(ВТ_Корректировка.ЧасовКОплате, 0) + ЕСТЬNULL(BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты.ЧасовКОплатеНачальныйОстаток, 0) КАК НачисленоЧасов,
	|	ЕСТЬNULL(BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты.СуммаКОплатеОборот, 0) + ЕСТЬNULL(ВТ_Корректировка.СуммаКОплате, 0) + ЕСТЬNULL(BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты.СуммаКОплатеНачальныйОстаток, 0) КАК СуммаНачисления,
	|	&НачалоПериода КАК ДатаНачала,
	|	&КонецПериода КАК ДатаОкончания,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.BKM_ОсновныеНачисления.Оклад) КАК ВидРасчета,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.BKM_УсловияОплатыСотрудников.СрезПоследних(
	|				&ДатаДокумента,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_Сотрудники КАК ВТ_Сотрудники)) КАК BKM_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_Сотрудники.Сотрудник = BKM_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.BKM_ВыполненныеСотрудникомРаботы.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_Сотрудники КАК ВТ_Сотрудники)) КАК BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты
	|		ПО ВТ_Сотрудники.Сотрудник = BKM_ВыполненныеСотрудникомРаботыОстаткиИОбороты.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Корректировка КАК ВТ_Корректировка
	|		ПО ВТ_Сотрудники.Сотрудник = ВТ_Корректировка.Сотрудник";	
	
		
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Дата)); 
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл 
		
		ЗаполнитьЗначенияСвойств(Объект.ОсновныеНачисления.Добавить(), Выборка);
		
		Если Выборка.СуммаНачисления <> 0 Тогда
			ЗаполнитьЗначенияСвойств(Объект.ДополнительныеНачисления.Добавить(), Выборка);
		КонецЕсли;
		
	КонецЦикла;		
	
КонецПроцедуры


&НаСервере
Функция ПолучитьГрафикРаботОтпуска()

	Возврат Константы.BKM_ГрафикОтпуска.Получить();

КонецФункции


&НаКлиенте
Функция ДатыЗаполненыВерно()
	
	Для Каждого СтрокаТЧ Из Объект.ОсновныеНачисления Цикл
		
		Результат = Истина;
		Если   СтрокаТЧ.ДатаНачала > СтрокаТЧ.ДатаОкончания Тогда 
			
			Результат = Ложь;
			ТекстСообщения = "Неправильно заполнены поля ДатаНачала и ДатаОкончани. ДатаНачала больше чем ДатаОкончания";
			//@skip-check unknown-method-property
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.ОсновныеНачисления[" + Формат(СтрокаТЧ.НомерСтроки -1 ,"ЧДЦ=0; ЧГ=0")  + " ].ДатаНачала");;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции


#КонецОбласти




