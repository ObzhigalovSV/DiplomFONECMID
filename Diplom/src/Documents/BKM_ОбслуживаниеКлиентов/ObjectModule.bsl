#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

	Перем СообщениеТелеграммБоту; // СообщениеТелеграммБоту до записи объекта в базу  

#КонецОбласти


#Область ОбработчикиСобытий   

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверить табличную часть на предмет заполнения выполненных работ.
	// На основании полученных данных установить статус заявки
	Если ВыполненныеРаботы.Количество() = 0 Тогда
		СтатусЗаявки = Перечисления.BKM_СтатусЗаявкиНаОбслужтвание.ОжидаетсяВыполнениеРабот;
	Иначе
		СтатусЗаявки = Перечисления.BKM_СтатусЗаявкиНаОбслужтвание.ЗаявкаВыполнена;
	КонецЕсли;	
	
	СообщениеТелеграммБоту = СформироватьСообщениеТелеграммБоту();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
     	
     	Возврат;
     	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СообщениеТелеграммБоту) Тогда 
		СообщениеТелеграммБоту = СтрЗаменить(СообщениеТелеграммБоту,"№Заявки",ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер));
		Если Справочники.BKM_УведомленияТелеграмБоту.ДобавитьУведомление(СообщениеТелеграммБоту ) = Неопределено Тогда
			
			ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Формирование уведомления в справочнике. Запись не создана.", УровеньЖурналаРегистрации.Ошибка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьЗаполнениеОбъекта(Отказ); 
	
	// Проверить табличную часть на предмет заполнения выполненных работ.
	
	Если ВыполненныеРаботы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	

	ПроцентОплатыОтРабот = ПолучитьПроцентОплатыОтРабот(Дата, Специалист);
	Если ПроцентОплатыОтРабот = Неопределено Тогда 
		
		ТекстСообщения = СтрШаблон("Документ не проведен. У сотрудника %1 не установлен процент оплаты от выполненных работ.", Специалист);	
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,,,Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда	
		Возврат;	
	КонецЕсли; 
			
	Движения.BKM_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.BKM_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	ВсегоЧасовКОплатеКлиенту = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	СтавкаЧасаПоДоговору = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор,"BKM_СтоимостьЧасаРаботыСпециалиста");
    СуммаКОплатеКлиенту = ВсегоЧасовКОплатеКлиенту * СтавкаЧасаПоДоговору;
	
	//Движения по регистру BKM_ВыполненныеКлиентуРаботы 
	Движение = Движения.BKM_ВыполненныеКлиентуРаботы.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ВсегоЧасовКОплатеКлиенту;
	Движение.СуммаКОплате = СуммаКОплатеКлиенту; 
	
	//Движения по регистру BKM_ВыполненныеСотрудникомРаботы 
	Движение = Движения.BKM_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Сотрудник = Специалист;
	Движение.ЧасовКОплате = ВыполненныеРаботы.Итог("ФактическиПотраченоЧасов");
	Движение.СуммаКОплате = СуммаКОплатеКлиенту * ПроцентОплатыОтРабот / 100;
	
КонецПроцедуры

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеОбъекта(Отказ) 
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, BKM_ДатаНачалаДействияДоговора, BKM_ДатаОкончанияДействияДоговора");
	
	// Проверка вида договора
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.BKM_АбонентскоеОбслуживание Тогда 
		
		ТекстСообщения = "Документ не проведен. Выбранный договор не предусматривает абанонентского обслуживания.";
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Договор","Объект",Отказ);	
		
	Иначе
		
		// Проверка действия договора 	
		Если РеквизитыДоговора.BKM_ДатаНачалаДействияДоговора > Дата Или РеквизитыДоговора.BKM_ДатаОкончанияДействияДоговора < Дата Тогда
			
			ТекстСообщения = "Документ не проведен. Выбранный договор не дейстителен на дату составления текущего документа.";
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Договор","Объект",Отказ);	
			
		КонецЕсли;
		
	КонецЕсли;  
				
КонецПроцедуры

Функция ПолучитьПроцентОплатыОтРабот(Дата, Специалист)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	BKM_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
	|ИЗ
	|	РегистрСведений.BKM_УсловияОплатыСотрудников.СрезПоследних(&ДатаДокумента, Сотрудник = &Сотрудник) КАК BKM_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.ПроцентОтРабот;
		
	Иначе   
		
		Возврат Неопределено; 
		
	КонецЕсли;
	
КонецФункции

Функция СформироватьСообщениеТелеграммБоту()
	
	ТекстСообщения = "";
	Если ЭтоНовый() Тогда
		
		ТекстСообщения = "Создана новая заявка на обслуживание клиента";
		
	Иначе
		
		СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот, Специалист");
		
		ИзмененныеРеквизиты = Новый Структура;
		ИзмененныеРеквизиты.Вставить("ДатаПроведенияРабот", ДатаПроведенияРабот);
		ИзмененныеРеквизиты.Вставить("ВремяНачалаРабот", ВремяНачалаРабот);
		ИзмененныеРеквизиты.Вставить("ВремяОкончанияРабот", ВремяОкончанияРабот);
		ИзмененныеРеквизиты.Вставить("Специалист", Специалист);
		
		Если  Не ОбщегоНазначения.ДанныеСовпадают(СтарыеРеквизиты, ИзмененныеРеквизиты) Тогда
			
			ТекстСообщения = "Произошли изменения в заявке на обслуживание клиента";
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если ТекстСообщения <> "" Тогда
		
		ТекстСообщения = СтрШаблон("%1 №№Заявки от %2.
						|Контрагент %3.
						|Дата проведения работ запланирована на %4 с %5 по %6.
						|Назначен специалист: %7.",
						ТекстСообщения, 
						Формат(Дата,"ДФ=dd.MM.yyyy"), Клиент, Формат(ДатаПроведенияРабот,"ДФ=dd.MM.yyyy"),
						Формат(ВремяНачалаРабот,"ДФ=ЧЧ.мм"),Формат(ВремяОкончанияРабот,"ДФ=ЧЧ.мм"), Специалист);
		
	КонецЕсли;
	
    Возврат ТекстСообщения; 
	
КонецФункции

#КонецОбласти  

#КонецЕсли
